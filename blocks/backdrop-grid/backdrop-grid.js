import { createOptimizedPicture } from '../../scripts/aem.js';
import { domEl } from '../../scripts/dom-helpers.js';
import { getIndividualIcon } from '../../scripts/utils.js';

/**
* Generates a the media content in the card.
* @param {HTMLElement} div - The `div` element to be transformed into a card media section.
* @param {HTMLElement} container - The card wrapper the content should be in.
*/
function generateMedia( div, container ) {
	div.className = 'backdrop-card__media';
	const img = container.querySelector( 'picture' );
	const imgWrapper = domEl( 'div', { class: 'backdrop-card__img' }, img );
	div.append( imgWrapper );
}

/**
* Generates a the non-media content in the card.
* @param {HTMLElement} div - The `div` element to be transformed into a card media section.
* @param {HTMLElement} container - The card wrapper the content should be in.
*/
function generateContent( div, container ) {
	const button = div.querySelector( '.usa-button__wrap' );
	const buttonLink = button.querySelector( 'a' );
	const buttonText = buttonLink.title;
	const heading = div.querySelector( 'h2, h3, h4, h5, h6' );
	div.className = 'backdrop-card__body';
	let meta = '';
	const pTags = div.querySelectorAll( 'p:not(.usa-button__wrap' );
	
	if ( pTags.length > 1 ) {
		meta = domEl( 'span', { class: 'usa-tag' }, div.querySelector( 'p' ).textContent );
		div.querySelector( 'p' ).remove(); // remove meta p tag after we grab it
	}
	
	// take out the fake button and put into its own container
	if ( button ) {
		const fakeButton = domEl( 'p', { class: 'usa-button usa-button--secondary', title: buttonText }, buttonText );
		const buttonWrap = domEl( 'div', { class: 'backdrop-card__footer' } );
		buttonWrap.append( fakeButton );
		button.remove();
		container.append( buttonWrap );
		getIndividualIcon( fakeButton, 'arrow_forward' );
	}

	// take out the heading and put into its own container
	if ( heading ) {
		const link = buttonLink.getAttribute( 'href' );
		const cardLink = domEl( 'a', { class: 'backdrop-card__link', href: link, 'aria-labelledby': heading.id} );
		heading.classList.add( 'backdrop-card__heading' );
		heading.append( cardLink );
		const headerWrap = domEl( 'div', { class: 'backdrop-card__header'}, meta, heading );
		container.prepend( headerWrap );
	}
}

/**
* Generates in the card.
* @param {HTMLElement} container - The card wrapper the content should be in. child of the li
*/
function generateWholeCard( container ) {
	[...container.children].forEach( ( div ) => {
		if ( div.querySelector( 'picture' ) ) {
			generateMedia( div, container );
		} else {
			generateContent( div, container );
		}
	} );
	
	const picture = container.querySelector( '.backdrop-card__media' );
	const heading = container.querySelector( '.backdrop-card__header' );
	const desc = container.querySelector( '.backdrop-card__body' );
	const footer = container.querySelector( '.backdrop-card__footer' );
	const content = domEl( 'div', { class: 'backdrop-card__content' }, heading, desc, footer );
	container.append( picture );
	container.append( content );
}

/**
* Generates all content in the card
* @param {HTMLElement} block - The card grid generated by EDS
*/
export default function decorate( block ) {
	const ul = domEl( 'ul', { class: 'backdrop-card-group usa-list--unstyled' } );

	[...block.children].forEach( ( row ) => {
		const li = domEl( 'li', { class: 'backdrop-card' } );
		const cardContainer = domEl( 'div', { class: 'backdrop-card__container' } );

		// add all the table row contents into a li with a container wrapper inside
		while ( row.firstElementChild ) {
			cardContainer.append( row.firstElementChild );
			li.append( cardContainer );
		}

		generateWholeCard( cardContainer );
		ul.append( li );
	} );

	ul.querySelectorAll( 'picture > img' ).forEach( ( img ) => img.closest( 'picture' ).replaceWith( createOptimizedPicture( img.src, img.alt, false, [{ width: '800' }] ) ) );

	block.textContent = '';
	block.append( ul );
}
